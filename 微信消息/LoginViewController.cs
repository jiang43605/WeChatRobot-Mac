// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using System.IO;
using System.Threading.Tasks;
using WXLogin;
using System.Threading;

namespace 微信消息
{
    public partial class LoginViewController : NSViewController
    {
        public LoginViewController(IntPtr handle) : base(handle)
        {
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();


        }

        public static AppDelegate App
        {
            get { return (AppDelegate)NSApplication.SharedApplication.Delegate; }
        }

        public override void ViewDidAppear()
        {
            base.ViewDidAppear();

            this.View.Window.Title = "使用微信扫码登录";

            InitLoginAsync().ContinueWith((result) =>
            {
                if (!result.Result) return;

                BeginInvokeOnMainThread(() =>
                {
                    App.OpenMainWindow();
                    this.View.Window.Close();
                });
            });
        }

        /// <summary>
        /// 微信二维码获取
        /// </summary>
        /// <returns>The login async.</returns>
        private async Task<bool> InitLoginAsync()
        {
            return await Task.Run(() =>
              {
                  var ls = new LoginService();
                  DisplayQRCode(ls.GetQRCode());

                  while (true)
                  {
                      var loginResult = ls.LoginCheck();

                      if (loginResult is byte[])
                      {
                          //已扫描 未登录
                          this.InvokeOnMainThread(() =>
                            {
                                using (var stream = new MemoryStream(loginResult as byte[]))
                                    this.ImageLoginCode.Image = NSImage.FromStream(stream);
                                this.View.Window.Title = "请在手机上点击登录按钮";
                                this.LabelLoginInfo.StringValue = string.Empty;
                            });
                      }
                      else if (loginResult is string)
                      {
                          //已完成登录
                          if (ls.GetSidUid(loginResult as string)) return true;
                          Dialog("当前环境存在异常！登录失败！");
                          this.View.Window.Close();
                          return false;
                      }
                  }
              });
        }

        private void DisplayQRCode(byte[] bytes)
        {
            this.InvokeOnMainThread(() =>
            {
                using (var stream = new MemoryStream(bytes))
                    this.ImageLoginCode.Image = NSImage.FromStream(stream);
            });
        }

        private void Dialog(string content, string title = "提示")
        {
            this.InvokeOnMainThread(() =>
            {
                var alert = new NSAlert()
                {
                    AlertStyle = NSAlertStyle.Informational,
                    InformativeText = content,
                    MessageText = title,
                };
                alert.RunModal();
            });

        }

    }
}
